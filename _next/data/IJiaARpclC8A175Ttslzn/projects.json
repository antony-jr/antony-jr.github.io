{"pageProps":{"projects":[{"frontmatter":{"image":"/project-assets/blueglow.png","title":"Blue Glow","github":"https://github.com/antony-jr/blue-glow","description":"Qt/QML C++ system tray application that can notify the user when there is a new Github Notification. Built for Github users in mind."},"markdownBody":"\nA simple system tray icon program that glows blue and optionally notifies you when you get a github notification.\nOnly requires a **personal github token** which has a permission to read your notifications. (does not require any other permissions)\n\n[Get Binaries from Releases](https://github.com/antony-jr/blue-glow/releases)\n\n\n# Other Platform Support\n\nI don't really think that anyone would use this, I mainly created this for myself. So if you need this application for other platforms other than linux, Then I would be happy to activate automatic builds for Windows and MacOSX.\n(PS: The application is mostly cross platform)\n\n# Artwork\n\nAll graphics work by [Atra](https://github.com/estatra).\n\nThe graphics work uses a modified version of bell icon from [Feather Icons](https://github.com/feathericons/feather) which is licensed under MIT.\n\nFont used in the graphic work is [Source Serif Pro](https://fonts.google.com/specimen/Source+Serif+Pro) and it is licensed under Open Font License.\n\n\n# License\n\nThe MIT License.   \nCopyright (C) 2020, [@antony-jr](https://github.com/antony-jr).\n\n","slug":"BlueGlow"},{"frontmatter":{"image":"/project-assets/insight.png","title":"Insight GDB Debugger AppImage","github":"https://github.com/antony-jr/insight","description":"Insight GDB Debugger AppImage build scripts and patches to work as an AppImage."},"markdownBody":"\n**Insight** is a graphical user interface to **GDB**, the **GNU Debugger** written in **Tcl/Tk** by people working at **Red Hat, Inc**. and **Cygnus Solutions**. Red Hat has generously **donated** Insight to the **public** and even pays a few people to work on it occasionally.\n\nBut one problem exists , Insight is hard to get **now** and a lot of people might want it because **Jeff** exclusively uses it in his\n**book** namely **'Assembly Language Step by Step Programming with Linux'** and so did I , Therefore I built an **appimage** for insight and so other folks who stumbles upon the same problem don't have to wreck their head on compiling insight from source.\nInfact you **don't even have to install anything** , **Just download a binary and mark it executable**.\n\nDownload the **binary** and **mark it executable** as mentioned in the **table below** , This **does not depend on anything**\nthis can even run in a live boot **without installing anything**, Have fun!\n\n[Get Binaries from Releases](https://github.com/antony-jr/insight/releases/)\n\n\n**Important note:** Please use **absolute paths** when using command line arguments like ``` -q ./YourApp ```.   \n\nIf you want support for **32 bits** then rise a issue because nowadays modern pc's are not **32 bits** but **Jeff Duntemann's** book is dealing with **IA-32** where this tool is required , Irony!\n\n\n# Upstream Repo\n\nThanks to **redhat**, Insight's git repo is still kept alive at ```git://sourceware.org/git/insight.git```.   \nBut be **warned that building it from source is very challenging when its done in a modern os** and also requires you \nto provide **Tcl/Tk** libraries externally. *I bet you will be satisfied with the portable binary*.\n\n# Acknowledgements\n\nThis portable package is only possible because of these projects , do check them out.\n\n* **[Assembly Step by Step](https://www.amazon.com/Assembly-Language-Step-Step-Programming/dp/0470497025)** - Inspiration to make this project.\n* **[AppImage](https://github.com/appimage/)** - Used to package the portable binary.\n* **[Insight/RedHat](https://sourceware.org/insight/)** - Thanks to RedHat for keeping this alive to this date.\n\n# License\n\nOnly the **patches** and **build scripts** are under , **The MIT License.**   \nCopyright (C) 2018 Antony Jr.\n\n","slug":"Insight"},{"frontmatter":{"image":"/project-assets/obr.png","title":"Optical Braille Recognition","github":"https://github.com/antony-jr/OpticalBrailleRecognition","description":"Simple Python Library which uses OpenCV to do single sided English braille recognition. Can be integrated with Machine Learning"},"markdownBody":"\n\n**Optical braille recognition** is the act of capturing and processing images of braille characters into natural language characters. It is used to convert braille documents for people who cannot read them into text, and for preservation and reproduction of the documents. \n\nThe recognition uses simple computational geometry to do the segmentation and classification.\nOptionally you can use the segmenting engine and use your own classifier, a artificial neural network might be a good choice.\n\nBut it is worth to note that the segmenting engine only works with single sided English braille.\n\n*Documentation is not given because I think no one will need this, atleast for now.\nIf you want a Documentation, please raise an issue.*\n\n# Try it\n\nPlease visit [this](https://opticalbraillerecognition-demo.herokuapp.com) heroku application to see the demo.\n\n# License\n\nThe BSD 3-clause \"New\" or \"Revised\" License.\n\nCopyright (C) 2020, Antony jr.   \nAll Rights Reserved.\n\n","slug":"OBR"},{"frontmatter":{"image":"/project-assets/qarchive.png","imageWidth":"300px","title":"QArchive","url":"https://antony-jr.github.io/QArchive","github":"https://github.com/antony-jr/QArchive","description":"Async C++ Cross-Platform library that modernizes libarchive using Qt5 ðŸš€. Simply extracts 7z hamburger, Tarballs ðŸŽ± and other supported formats by libarchive. ðŸ’–"},"markdownBody":"\n\nQArchive is a cross-platform C++ library that modernizes libarchive , This library helps you to extract and compress \narchives supported by libarchive. The whole library itself is crafted to work perfectly well with the \nQt event loop and thus its a perfect fit for your Qt projects.\n\nI personally made this project to extract .7z archives in order to create a library that can update Qt Apps installed via\nQt Installer Framework without using the updater tool provided by Qt , because I hated using sub-process and besides\nI wanted a in-built updater for my application and that's not possible with the already provided updater from \nQt Installer Framework.\n\n## Features\n\n* *Single threaded and Non-Blocking API* - Using Qt's Event Loop. (**you can optionally run in a different thread**)\n\n* *Easy to Use API* - Made some effort to match Qt's style.\n\n* *Cyclic API , No use of mutex* - The whole library is fully cyclic and therefore no mutex is used.(Only signals and slots.)\n\n* *Drink the Qt Kool-aid* - In a positive way.\n\n\n# Getting Started\n\nLearn more about **QArchive** at the official [documentation](https://antony-jr.github.io/QArchive).\n\n\n## Conan\n\n*Thanks to [Eric Riff](https://github.com/ericriff)*.\n\nStarting from version **2.0.1** QArchive is available on the [Conan C/C++ package manager](https://conan.io/), which means you can download prebuilt packages for all major platforms (Windows, Linux, macOS, etc).\n\nFind an example on how to consume Conan's precompiled packages in the examples folder.\n\n\n# Thank You ![Thank You](https://img.shields.io/badge/Always-Say%20Thank%20You!-blue.svg?style=flat-square)\n\nI really need to thank the developers of these libraries for creating it because QArchive is elegant because of them! :heart:   \n\n* [libarchive](https://github.com/libarchive/libarchive)\n* [Qt](https://github.com/qt)\n\n\n\n# Support\n\nIf you think that this project is **cool** then you can give it a :star: or :fork_and_knife: it if you want to improve it with me. I really :heart: stars though!   \n\n\n# License\n\nThe BSD 3-clause \"New\" or \"Revised\" License.\n\nCopyright (C) 2017-present, QArchive Contributors and Antony J.R\n\nAll Rights Reserved.\n\n","slug":"QArchive"},{"frontmatter":{"image":"/project-assets/sharemyhost.png","title":"Share My Host","github":"https://github.com/antony-jr/ShareMyHost","description":"Qt/QML C++ application that can make file sharing easy as possible. Primarily built to stream videos to Kodi or a Smart TV."},"markdownBody":"\n\n**ShareMyHost** is a simple and powerful program written in C++/QML using Google's material \ndesign guidelines. It gives a *very simple http server for sharing file(s) within your\nlocal network*. It uses **mount points** which are sort of like http endpoints with directory\nlisting to specific directories in your file system.\n\nFor example, You create a **Mount Point**(say /Animes to /home/user/Anime) then you can access\nthe directory listing and all its files at ```http://ip:port/Animes``` (Ex: http://192.168.1.3:8080/Animes).\n\n\n[Get Binaries from Releases](https://github.com/antony-jr/ShareMyHost/releases)\n\n\n## Features\n\n\n* *Easy to Use* - This program is specifically built for ease of use.\n\n* *Support for Kodi HTTP Client* - The best of my knowledge, this is the only application which supports listing of files in kodi \n  from the mount points.\n\n* *Directory Listing by Default* - No need to fight with permissions in linux.\n\n* *Automatic Permission Managemnt* - No need to worry about who owns what.\n\n* *Mongoose Server as Backend* - Uses a trusted Web Server.\n\n* *Material Design* - Built using QML with Material Style.\n\n\n# Support \n\nIf you think that this project is **cool** then you can give it a :star: or :fork_and_knife: it if you want to improve it with me. I really :heart: stars though!   \n\nYou can also tweet about me on twitter , get connected with me [@antonyjr0](https://twitter.com/antonyjr0)\n\nThank You! :smiley_cat:\n\n# Icons\n\nAll icons used in this program has been made by [Icons8](https://icons8.com). \n\n# Mongoose Server Usage\n\nThis program uses the mongoose server for serving contents, Since it's in GPLV2 this program is also under \nGPLV2 to comply with the license. \n\nThe source of mongoose server has been heavily modified to our specific use case, such as the usage with\nmount points. Therefore for updating the mongoose server code, we must be careful not to remove the \nmodified code. *All modification to the code is mentioned in the top of source files.*\n\n\n# License\n\nThe GNU General Public License V2.\n\nCopyright (C) Antony Jr.\n\n","slug":"ShareMyHost"},{"frontmatter":{"image":"https://raw.githubusercontent.com/antony-jr/spirit/main/artwork/spirit_logo.png","imageWidth":"300px","title":"Spirit Desktop Mascot","url":"https://antony-jr.github.io/spirit","github":"https://github.com/antony-jr/spirit","spotlight":"Rewrite is done, Checkout the v0.2.0 release of Spirit,  it is now cross-platform and much more efficient. Please try out the app.","description":"The Twenty First Century Window Sitter. ðŸ’–"},"markdownBody":"\nSpirit is a modern and hackable desktop mascot, it operates very similar to **MaCoPix** and \n**Shimeji** but was never invented to replace either of them. Spirit is made just out of \ncuriousity and as an alternative to both of them since both are legacy software.\n\nSpirit is built from the ground up using Qt5 Framework and C++, uses rust for it's auxilary tools \nand helper applications. Spirit is also cross-platform and can run in all the major platforms \nwith no issues.\n\n[Ritual](https://github.com/antony-jr/ritual) is used to create new spirits, but you can download\nofficial spirits from [here](https://antonyjr.in/spirit/docs/spirit-files/download).\nYou can also use [Spirit addons](https://antonyjr.in/spirit/docs/programs) which are simple \nprograms which interacts with Spirit using it's REST API to do some meaningful things like \nnotifying when a command fails.\n\n**Wayland support is on the way but not anytime soon, sorry, please see why this is the case\nin this small [blog post](https://antonyjr.in/spirit/blog/wayland)**.\n\n# Installation\n\nDownload the software for your platform from [official website](https://antonyjr.in/spirit/). And\nfollow through the instructions. It's really simple, unlike **Shimeji** which involves installing\na legacy version of JRE.\n\nFor more information, please head over to the [official website](https://antonyjr.in/spirit/).\n\n# License\n\nThe GNU General Public License v3.\n\nCopyright (C) 2021-present, D. Antony J.R\n","slug":"Spirit"},{"frontmatter":{"image":"/project-assets/updatedeployqt.png","imageWidth":"300px","title":"Update Deploy Qt","github":"https://github.com/antony-jr/updatedeployqt","description":"Deploy updaters for Qt Application with less code as possiblle, close to a single command."},"markdownBody":"\n> Before thinking about using this please remember that this software is still in pre-alpha stage and \n> everything this does is very experimental and unstable which may even crash your application at \n> times. This project may even be **deleted** without any notice. -- Antony Jr.\n\n\n**updatedeployqt** is a command line tool which can **deploy** auto update feature or *integrate the updater into\nyour* QApplication with **zero code change.** This does **not depend** on the programming language you used to \nbuild the **Application** , *as long as it uses Qt framework , this feature can be deployed using this tool.*\n\n\n\n**IMPORTANT**: *This software is in alpha stage.* **Remember with great power comes great responsibility.**\n\n\n# Features\n\n* *Deploy Native Auto Updater with* **zero code change** - *This done using Qt Plugin Injector*.\n\n* **Programming Language Independent** - The reason you want to use this solution.\n\n* *Supports AppImages , Qt Installer Framework and Applications released through Github.*\n\n* *Light-weight* - Using this only takes about **800 KiB**.\n\n* *Cross-platform* - Yet to implement but its going to be.\n\n* *Respects General Data Protection Regulation* - unlike electron-updater.\n\n* *Drink the Qt Kool-aid* - In a positive way.\n\n# Projects Using This\n\nFeel free to open a **PR** to include your project too. Here are some known projects which use this to deploy\nauto update feature for their Qt application.\n\n* [Blue Glow](https://github.com/antony-jr/blue-glow) - You can use this as an example.\n\n* [QTalarm-AppImage](https://github.com/antony-jr/QTalarm-AppImage) - You can also use this as an example.\n\n\n\n# License\n\nBSD 3-Clause License\n\nCopyright (c) 2019, Antony Jr.   \n\n\n\n","slug":"UpdateDeployQt"}]},"__N_SSG":true}